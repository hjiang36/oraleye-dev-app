/**
 * OralEye API
 * API for controlling lights and camera on OralEye device
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import CameraAutofocusPostRequest from './model/CameraAutofocusPostRequest';
import CameraExposurePostRequest from './model/CameraExposurePostRequest';
import CameraManualFocusPostRequest from './model/CameraManualFocusPostRequest';
import CameraMetadataGet200Response from './model/CameraMetadataGet200Response';
import LightsBlueMaxTimePostRequest from './model/LightsBlueMaxTimePostRequest';
import LightsControlPost200Response from './model/LightsControlPost200Response';
import LightsStatusGet200Response from './model/LightsStatusGet200Response';
import CameraApi from './api/CameraApi';
import LightsApi from './api/LightsApi';

/**
 * API for controlling lights and camera on OralEye device.<br>
 * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
 * <p>
 * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
 * <pre>
 * var OralEyeApi = require('index'); // See note below*.
 * var xxxSvc = new OralEyeApi.XxxApi(); // Allocate the API class we're going to use.
 * var yyyModel = new OralEyeApi.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
 * and put the application logic within the callback function.</em>
 * </p>
 * <p>
 * A non-AMD browser application (discouraged) might do something like this:
 * <pre>
 * var xxxSvc = new OralEyeApi.XxxApi(); // Allocate the API class we're going to use.
 * var yyy = new OralEyeApi.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * </p>
 * @module index
 * @version 0.0.1
 */
export {
  /**
   * The ApiClient constructor.
   * @property {module:ApiClient}
   */
  ApiClient,

  /**
   * The CameraAutofocusPostRequest model constructor.
   * @property {module:model/CameraAutofocusPostRequest}
   */
  CameraAutofocusPostRequest,

  /**
   * The CameraExposurePostRequest model constructor.
   * @property {module:model/CameraExposurePostRequest}
   */
  CameraExposurePostRequest,

  /**
   * The CameraManualFocusPostRequest model constructor.
   * @property {module:model/CameraManualFocusPostRequest}
   */
  CameraManualFocusPostRequest,

  /**
   * The CameraMetadataGet200Response model constructor.
   * @property {module:model/CameraMetadataGet200Response}
   */
  CameraMetadataGet200Response,

  /**
   * The LightsBlueMaxTimePostRequest model constructor.
   * @property {module:model/LightsBlueMaxTimePostRequest}
   */
  LightsBlueMaxTimePostRequest,

  /**
   * The LightsControlPost200Response model constructor.
   * @property {module:model/LightsControlPost200Response}
   */
  LightsControlPost200Response,

  /**
   * The LightsStatusGet200Response model constructor.
   * @property {module:model/LightsStatusGet200Response}
   */
  LightsStatusGet200Response,

  /**
   * The CameraApi service constructor.
   * @property {module:api/CameraApi}
   */
  CameraApi,

  /**
   * The LightsApi service constructor.
   * @property {module:api/LightsApi}
   */
  LightsApi,
};
